# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: cd pipeline
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: cd db
      - run: eslint **/*.js
      - run: yarn test

      - run: cd archiver
      - run: eslint **/*.js
      - run: yarn test

  apiserv:
    docker:
      # specify the version you desire here
      - image: circleci/golang:1.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: /go/src/github.com/sociam/xray

    steps:
      - checkout

      - run: cd pipeline/apiserv
      - run: go get -v -t -d ./...
      - run: go test -v ./...

  analyzer:
    docker:
      # specify the version you desire here
      - image: circleci/golang:1.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: /go/src/github.com/sociam/xray

    steps:
      - checkout

      - run: cd pipeline/analyzer
      - run: go get -v -t -d ./...
      - run: go test -v ./...
